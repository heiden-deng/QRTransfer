package com.willswill.qrtunnel.gui;

import com.willswill.qrtunnel.core.AppConfigs;
import lombok.extern.slf4j.Slf4j;

import javax.swing.*;
import java.awt.*;
import java.io.File;

/**
 * @author Will
 */
@Slf4j
public class ConfigsForm {
    private JPanel panel1;
    private JTextArea saveDirTextField;
    private JButton chooseButton;
    private JTextField chunkSizeTextField;
    private JTextField imageWidthTextField;
    private JTextField sendIntervalTextField;
    private JComboBox senderLayoutComboBox;
    private JButton saveConfigsButton;

    private JFrame frame;

    public static ConfigsForm create() {
        JFrame frame = new JFrame("ConfigsForm");
        ConfigsForm form = new ConfigsForm();
        frame.setContentPane(form.panel1);
        frame.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        frame.setResizable(false);
        form.frame = frame;

        form.initComponents();
        form.fillForm();

        frame.pack();
        frame.setVisible(true);
        return form;
    }

    void initComponents() {
        chooseButton.addActionListener(e -> {
            String selectedDir = saveDirTextField.getText();
            JFileChooser fileChooser = new JFileChooser(new File(selectedDir));
            fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            fileChooser.setDialogTitle("Choose Save Directory");
            fileChooser.showDialog(new JLabel(), "Choose");
            File file = fileChooser.getSelectedFile();
            if (file != null && file.exists()) {
                saveDirTextField.setText(file.getAbsolutePath());
                saveDirTextField.setToolTipText(file.getAbsolutePath());
            }
        });

        saveConfigsButton.addActionListener(e -> {
            try {
                saveForm();
                if (Launcher.self.getSenderForm() != null) {
                    Launcher.self.getSenderForm().resetLayout();
                }
                frame.setVisible(true);
            } catch (IncorrectConfigsException ex) {
                JOptionPane.showMessageDialog(panel1, ex.getMessage());
            } catch (Exception ex) {
                log.error("Save configs failed!", ex);
                JOptionPane.showMessageDialog(panel1, ex.getClass().getName() + ": " + ex.getMessage());
            }
        });
    }

    public void show() {
        fillForm();
        frame.setVisible(true);
    }

    void saveForm() {
        AppConfigs appConfigs = Launcher.getAppConfigs();
        appConfigs.setSaveDir(saveDirTextField.getText());
        appConfigs.setImageWidth(Integer.parseInt(imageWidthTextField.getText()));
        appConfigs.setImageHeight(appConfigs.getImageWidth());
        int chunkSize = Integer.parseInt(chunkSizeTextField.getText());
        if (chunkSize > 2000) {
            throw new IncorrectConfigsException("The max value of chunk size is 2000");
        }
        appConfigs.setChunkSize(chunkSize);
        appConfigs.setSendInterval(Integer.parseInt(sendIntervalTextField.getText()));
        appConfigs.setSenderLayout(senderLayoutComboBox.getSelectedItem().toString());
    }

    void fillForm() {
        AppConfigs appConfigs = Launcher.getAppConfigs();
        saveDirTextField.setText(appConfigs.getSaveDir());
        saveDirTextField.setToolTipText(appConfigs.getSaveDir());
        imageWidthTextField.setText(String.valueOf(appConfigs.getImageWidth()));
        chunkSizeTextField.setText(String.valueOf(appConfigs.getChunkSize()));
        sendIntervalTextField.setText(String.valueOf(appConfigs.getSendInterval()));
        senderLayoutComboBox.setSelectedItem(appConfigs.getSenderLayout());
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new FlowLayout(FlowLayout.LEFT, 0, 5));
        panel1.setPreferredSize(new Dimension(400, 250));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 0));
        panel2.setBackground(new Color(-8019262));
        panel2.setPreferredSize(new Dimension(400, 17));
        panel1.add(panel2);
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$(null, Font.BOLD, -1, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setText("Receiver Configs");
        panel2.add(label1);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
        panel3.setPreferredSize(new Dimension(400, 40));
        panel1.add(panel3);
        final JLabel label2 = new JLabel();
        label2.setText("Save Files To");
        panel3.add(label2);
        saveDirTextField = new JTextArea();
        saveDirTextField.setEditable(false);
        saveDirTextField.setEnabled(true);
        saveDirTextField.setPreferredSize(new Dimension(220, 20));
        panel3.add(saveDirTextField);
        chooseButton = new JButton();
        chooseButton.setText("Choose");
        panel3.add(chooseButton);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 0));
        panel4.setBackground(new Color(-8019262));
        panel4.setPreferredSize(new Dimension(400, 17));
        panel1.add(panel4);
        final JLabel label3 = new JLabel();
        Font label3Font = this.$$$getFont$$$(null, Font.BOLD, -1, label3.getFont());
        if (label3Font != null) label3.setFont(label3Font);
        label3.setText("Sender Configs");
        panel4.add(label3);
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new FlowLayout(FlowLayout.LEADING, 5, 5));
        panel5.setPreferredSize(new Dimension(400, 100));
        panel1.add(panel5);
        final JPanel panel6 = new JPanel();
        panel6.setLayout(new BorderLayout(5, 0));
        panel5.add(panel6);
        final JLabel label4 = new JLabel();
        label4.setHorizontalAlignment(4);
        label4.setPreferredSize(new Dimension(120, 17));
        label4.setText("Image Width");
        panel6.add(label4, BorderLayout.WEST);
        imageWidthTextField = new JTextField();
        imageWidthTextField.setPreferredSize(new Dimension(50, 24));
        panel6.add(imageWidthTextField, BorderLayout.CENTER);
        final JPanel panel7 = new JPanel();
        panel7.setLayout(new BorderLayout(5, 0));
        panel5.add(panel7);
        final JLabel label5 = new JLabel();
        label5.setHorizontalAlignment(4);
        label5.setPreferredSize(new Dimension(120, 17));
        label5.setText("Chunk Size");
        panel7.add(label5, BorderLayout.WEST);
        chunkSizeTextField = new JTextField();
        chunkSizeTextField.setPreferredSize(new Dimension(50, 24));
        panel7.add(chunkSizeTextField, BorderLayout.CENTER);
        final JPanel panel8 = new JPanel();
        panel8.setLayout(new BorderLayout(5, 0));
        panel5.add(panel8);
        final JLabel label6 = new JLabel();
        label6.setHorizontalAlignment(4);
        label6.setPreferredSize(new Dimension(120, 17));
        label6.setText("Send Interval (ms)");
        panel8.add(label6, BorderLayout.WEST);
        sendIntervalTextField = new JTextField();
        sendIntervalTextField.setPreferredSize(new Dimension(50, 24));
        panel8.add(sendIntervalTextField, BorderLayout.CENTER);
        final JPanel panel9 = new JPanel();
        panel9.setLayout(new BorderLayout(5, 0));
        panel5.add(panel9);
        final JLabel label7 = new JLabel();
        label7.setHorizontalAlignment(4);
        label7.setPreferredSize(new Dimension(120, 17));
        label7.setText("Sender Layout");
        panel9.add(label7, BorderLayout.WEST);
        senderLayoutComboBox = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        defaultComboBoxModel1.addElement("1*1");
        defaultComboBoxModel1.addElement("1*2");
        defaultComboBoxModel1.addElement("1*3");
        defaultComboBoxModel1.addElement("1*4");
        defaultComboBoxModel1.addElement("1*5");
        defaultComboBoxModel1.addElement("2*1");
        defaultComboBoxModel1.addElement("2*2");
        defaultComboBoxModel1.addElement("2*3");
        defaultComboBoxModel1.addElement("2*4");
        defaultComboBoxModel1.addElement("2*5");
        defaultComboBoxModel1.addElement("3*1");
        defaultComboBoxModel1.addElement("3*2");
        defaultComboBoxModel1.addElement("3*3");
        defaultComboBoxModel1.addElement("3*4");
        defaultComboBoxModel1.addElement("3*5");
        senderLayoutComboBox.setModel(defaultComboBoxModel1);
        senderLayoutComboBox.setPreferredSize(new Dimension(70, 30));
        panel9.add(senderLayoutComboBox, BorderLayout.CENTER);
        final JPanel panel10 = new JPanel();
        panel10.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel10.setPreferredSize(new Dimension(400, 40));
        panel1.add(panel10);
        saveConfigsButton = new JButton();
        saveConfigsButton.setText("Save Configs");
        panel10.add(saveConfigsButton);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}
